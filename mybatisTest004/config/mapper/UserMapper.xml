<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.UserMapper">
    <select id="findUserById" parameterType="int" resultType="user">
        SELECT * FROM users WHERE id=#{value}
    </select>
    <!--综合查询，根据复杂的信息来查询用户的信息-->
    <select id="findUserList" parameterType="userQueryVo" resultType="user">
        SELECT id, userName FROM users WHERE passWord=#{userCustom.passWord} AND userName like '%${userCustom.userName}%'
    </select>
    <!--根据hashMap查询-->
    <!--<select id="findUserbyHashMap" parameterType="hashMap" resultType="user">-->
        <!--SELECT * FROM users WHERE -->
    <!--</select>-->

    <!--<select id="secondSelect" parameterType="int" resultType="ResultSet">-->
        <!--SELECT * FROM users WHERE id=#{value}-->
    <!--</select>-->

    <insert id="addUser" parameterType="com.mybatis.pojo.User" >
--<!--selectKey返回插入的数据的主键，返回到user对象中，
SELECT LAST INSERT_ID();得到insert 进去得到的主键值，只适用于自增主键
keyProperty:将查询到主键值设置到入参的指定的对象的那个属性,也就是传入的参数User的id，返回去，
当然也可以为user随便新建一个属性，类型为int，将这个id的值返回给这个参数，这样就可以在那边通过调用入参的这个user的对相关的那个属性来显示
order：指定SELECT LAST INSERT_ID()的执行顺序，这是相当于insert语句来说它的执行顺序
resultType：指定SELECT LAST INSERT_ID()的返回的结果类型;
-->
        <selectKey keyProperty="id" order="AFTER" resultType="Integer">
            SELECT LAST_INSERT_ID();
        </selectKey>
        INSERT INTO users (userName,passWord,create_time)VALUES (#{userName},#{passWord},#{create_time})

</insert>

    <delete id="deleteUser" parameterType="String" >
        DELETE FROM users WHERE userName=#{VALUE}
    </delete>

    <!--<select id="fingUserByName" parameterType="String" resultType="com.mybatis.pojo.User">-->
        <!--SELECT * FROM users WHERE userName = #{VALUE }-->
    <!--</select>-->
    <!--${}表示拼接sql串，将接受得到的参数的内容不加任何修饰拼接在sql中
    但使用${}拼接sql串，有可能引起sql注入
    这种一般用在模糊查询上面-->
<!--${value}接收输入参数的内容，如果传入的内容是简单类型, ${}中只能使用value-->
    <!--<select id="muhuchaxun" parameterType="String" resultType="com.mybatis.pojo.User">-->
        <!--select * from users WHERE userName LIKE '%${value}%';-->
    <!--</select>-->

    <update id="updateUser" parameterType="com.mybatis.pojo.User">
        UPDATE users SET userName=#{userName}, passWord=#{passWord} WHERE id=#{id}
    </update>

</mapper>

